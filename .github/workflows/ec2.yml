name: Django CI

on:
  push:
    branches: [ "master" ]

# TODO: Use tags from build in "container" property for following jobs
env:
  BASE_IMAGE: enfasis2w1q/cw-base
  TEST_IMAGE: enfasis2w1q/cw-test

jobs:
  delete:
    runs-on: ubuntu-latest
    steps:
      - uses: strumwolf/delete-deployment-environment@v2
        with:
          # ⚠️ The provided token needs permission for admin write:org
          token: ${{ secrets.GITHUB_TOKEN }}
          onlyRemoveDeployments: true
          environment: demo

  build:
    runs-on: ubuntu-latest
    environment: demo
    steps:
      - uses: actions/checkout@v4
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push Base Image
        uses: docker/build-push-action@v5
        with:
          context: .
          pull: true
          push: true
          file: deploy/Dockerfile
          tags: ${{ env.BASE_IMAGE }}
      - name: Build and push Test Image
        uses: docker/build-push-action@v5
        with:
          context: .
          pull: true
          push: true
          file: deploy/Dockerfile
          target: testing
          tags: ${{ env.TEST_IMAGE }}

  test:
    runs-on: ubuntu-latest
    environment: demo
    needs: [build]
    container: enfasis2w1q/cw-test
    steps:
      - uses: actions/checkout@v4
      - name: Running Tests
        run: pytest --capture=sys --junitxml=junit.xml
      - name: Coverage Fail
        run: coverage xml --fail-under=95 -o cobertura.xml
      - name: Upload Report
        env:
          CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}
        run: bash -c "$(curl -Ls https://coverage.codacy.com/get.sh)"

  format:
    runs-on: ubuntu-latest
    environment: demo
    needs: [build]
    container: enfasis2w1q/cw-test
    steps:
      - uses: actions/checkout@v4
      - name: Ruff format
        run: ruff format .

  lint:
    runs-on: ubuntu-latest
    environment: demo
    needs: [build]
    container: enfasis2w1q/cw-test
    steps:
      - uses: actions/checkout@v4
      - name: Ruff Check
        run: ruff check .

  deploy:
    runs-on: ubuntu-latest
    needs: [test, format, lint]
    environment: demo
    steps:
      - uses: actions/checkout@v4
      - uses: azure/setup-kubectl@v3
      - name: Setting up minikube config
        run: |
          mkdir ~/.kube
          echo "$KUBE_CONFIG" | base64 --decode > ~/.kube/config
          echo "$KUBE_CA" > ~/.kube/ca.crt
          echo "$KUBE_CLIENT_KEY" > ~/.kube/client.key
          echo "$KUBE_CLIENT_CRT" > ~/.kube/client.crt
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
          KUBE_CA: ${{ secrets.KUBE_CA }}
          KUBE_CLIENT_KEY: ${{ secrets.KUBE_CLIENT_KEY }}
          KUBE_CLIENT_CRT: ${{ secrets.KUBE_CLIENT_CRT }}
      - name: Setting up Postgress
        run: |
          kubectl apply -f deploy/pg-storage.yaml
          kubectl apply -f deploy/pg-deployment.yaml
      - name: Deploy App
        run: |
          kubectl delete -f deploy/django-app.yaml || true
          kubectl delete -f deploy/django-cron.yaml || true
          kubectl apply -f deploy/django-app.yaml
          kubectl apply -f deploy/django-cron.yaml
      - name: Apply ingress
        run: kubectl apply -f deploy/ingress.yaml
